openapi: 3.0.0
info:
  title: Service Schedule Booking API
  description: API for appointment scheduling and management
  contact:
    name: NNA IS B2C OWNERS CI TEAM
    url: https://confluence.na.nissan.biz/display/MYN/Service+Schedule+Booking+-+Approach+and+Design
    email: NNAISB2COWNERSCITEAM@Nissan-usa.com
  license:
    name: Service Scheduling License Info
    url: https://confluence.na.nissan.biz/display/MYN/Service+Schedule+Booking+-+Approach+and+Design
  version: 2.0.0
externalDocs:
  description: Service Appointments Detailed documentation
  url: https://confluence.na.nissan.biz/display/MYN/Service+Schedule+Booking+-+Approach+and+Design
servers:
- url: "https://api01-1.nonprod.na.nissancloud.com/{basePath}"
  description: STAGE end point
- url: "https://api01-1.na.nissancloud.com/{basePath}"
  description: PROD end point
  variables:
    host:
      default: api01-1.nonprod.na.nissancloud.com
      enum:
      - api01-1.nonprod.na.nissancloud.com
      - api01-1.na.nissancloud.com
security:
- APIKeyAuthorizer: []
tags:
- name: appointments
paths:
  /serviceOperations/default:
    get:
      tags:
      - appointments
      summary: Retrieve the default service operations
      description: Retrieve the concerns options available at the dealership.
      operationId: getDefaultServiceOperations
      parameters:
      - name: country-code
        in: header
        description: Country Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Country Code
          example: "1"
      - name: locale
        in: header
        description: Locale
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Locale
          example: en-US
      - name: Prefer
        in: header
        description: "Json Payload that details the fields that the client wants included\
          \ in the repsonse. Can also include reporting information that goes into\
          \ the error logging through a context value paired specified as in the example.\
          \ logsLabel specifies key words to be logged in the application loggs, while\
          \ reportingLogs specifies keywords returned with an error message. Both\
          \ will default to context NNA_API and value Service Schedule Booking API\
          \ if they are not specified. Specific field names will default to false."
        required: false
        style: simple
        explode: false
        schema:
          type: string
          description: A json payload that details included response fields and reporting
            information
        example: "{'appointmentNumber': true, 'logsLabel': {context: NNA_API, value:\
          \ Service Schedule Booking API}, reportingLabel: {context: NNA_API, value:\
          \ Service Schedule Booking API}}"
      - name: star-minor-version
        in: header
        description: STAR Mionor Version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: API Minor Version
          example: 1.0.0
          enum:
          - 1.0.0
          - 1.0.1
          - 1.0.2
          - 1.0.3
        example: 1.0.0
      - name: requestId
        in: header
        description: Request ID/ Transaction ID Header Parameter (UUID version 4)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: 16a7d408-aed4-43f8-8af4-7a17f407f799
      - name: dealerNumber
        in: header
        description: Dealer Identifier
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 5
          minLength: 5
          pattern: "^[0-9]+$"
          type: string
        example: "04536"
      - name: brand
        in: header
        description: Brand
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Vehicle Brand
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
        example: toyota
      - name: creatorCode
        in: header
        description: Requesting Creator Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Creator Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: destinationCode
        in: header
        description: Destination Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Destination Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: vin
        in: query
        description: vehicle identification number
        required: true
        style: form
        explode: true
        schema:
          maxLength: 17
          minLength: 17
          type: string
          description: vin
        example: 1N4CZ0CPXJLEAF111
      - name: pageNumber
        in: query
        description: The number of returned page
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000000
          minimum: 1
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: The number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 600
          minimum: 1
          type: integer
          default: 100
      responses:
        "200":
          description: OK
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOperationsDefault'
        "400":
          description: "Bad Request, server cannot or will not process the request.\n\
            See more details in the Error message\n"
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: |
            The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: |
            The requested resource was not found.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:144656827983:function:service-schedule-booking/invocations
        httpMethod: POST
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /serviceOperations/byMileage:
    get:
      tags:
      - appointments
      summary: Retrieve service operations by mileage
      description: Retrieve the serviceOperations available at the dealership by mileage
      operationId: getServiceOperationsByMileage
      parameters:
      - name: country-code
        in: header
        description: Country Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Country Code
          example: "1"
      - name: locale
        in: header
        description: Locale
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Locale
          example: en-US
      - name: Prefer
        in: header
        description: "Json Payload that details the fields that the client wants included\
          \ in the repsonse. Can also include reporting information that goes into\
          \ the error logging through a context value paired specified as in the example.\
          \ logsLabel specifies key words to be logged in the application loggs, while\
          \ reportingLogs specifies keywords returned with an error message. Both\
          \ will default to context NNA_API and value Service Schedule Booking API\
          \ if they are not specified. Specific field names will default to false."
        required: false
        style: simple
        explode: false
        schema:
          type: string
          description: A json payload that details included response fields and reporting
            information
        example: "{'appointmentNumber': true, 'logsLabel': {context: NNA_API, value:\
          \ Service Schedule Booking API}, reportingLabel: {context: NNA_API, value:\
          \ Service Schedule Booking API}}"
      - name: star-minor-version
        in: header
        description: STAR Mionor Version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: API Minor Version
          example: 1.0.0
          enum:
          - 1.0.0
          - 1.0.1
          - 1.0.2
          - 1.0.3
        example: 1.0.0
      - name: requestId
        in: header
        description: Request ID/ Transaction ID Header Parameter (UUID version 4)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: 16a7d408-aed4-43f8-8af4-7a17f407f799
      - name: dealerNumber
        in: header
        description: Dealer Identifier
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 5
          minLength: 5
          pattern: "^[0-9]+$"
          type: string
        example: "04536"
      - name: brand
        in: header
        description: Brand
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Vehicle Brand
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
        example: toyota
      - name: creatorCode
        in: header
        description: Requesting Creator Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Creator Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: destinationCode
        in: header
        description: Destination Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Destination Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: vin
        in: query
        description: vehicle identification number
        required: true
        style: form
        explode: true
        schema:
          maxLength: 17
          minLength: 17
          type: string
          description: vin
        example: 1N4CZ0CPXJLEAF111
      - name: mileage
        in: query
        description: Mileage of the vehicle
        required: false
        style: form
        explode: true
        schema:
          maximum: 200000
          minimum: 0
          type: integer
          description: End date
          format: date
        example: 75000
      - name: pageNumber
        in: query
        description: The number of returned page
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000000
          minimum: 1
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: The number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 600
          minimum: 1
          type: integer
          default: 100
      responses:
        "200":
          description: OK
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOperationsByMileage'
        "400":
          description: "Bad Request, server cannot or will not process the request.\n\
            See more details in the Error message\n"
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: |
            The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: |
            The requested resource was not found.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:144656827983:function:service-schedule-booking/invocations
        httpMethod: POST
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /transportationOptions:
    get:
      tags:
      - appointments
      summary: Retrieve dealers transportation options
      description: Retrieve the transportation options available at the dealership.
      operationId: getTransportationOptions
      parameters:
      - name: country-code
        in: header
        description: Country Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Country Code
          example: "1"
      - name: locale
        in: header
        description: Locale
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Locale
          example: en-US
      - name: Prefer
        in: header
        description: "Json Payload that details the fields that the client wants included\
          \ in the repsonse. Can also include reporting information that goes into\
          \ the error logging through a context value paired specified as in the example.\
          \ logsLabel specifies key words to be logged in the application loggs, while\
          \ reportingLogs specifies keywords returned with an error message. Both\
          \ will default to context NNA_API and value Service Schedule Booking API\
          \ if they are not specified. Specific field names will default to false."
        required: false
        style: simple
        explode: false
        schema:
          type: string
          description: A json payload that details included response fields and reporting
            information
        example: "{'appointmentNumber': true, 'logsLabel': {context: NNA_API, value:\
          \ Service Schedule Booking API}, reportingLabel: {context: NNA_API, value:\
          \ Service Schedule Booking API}}"
      - name: star-minor-version
        in: header
        description: STAR Mionor Version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: API Minor Version
          example: 1.0.0
          enum:
          - 1.0.0
          - 1.0.1
          - 1.0.2
          - 1.0.3
        example: 1.0.0
      - name: requestId
        in: header
        description: Request ID/ Transaction ID Header Parameter (UUID version 4)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: 16a7d408-aed4-43f8-8af4-7a17f407f799
      - name: dealerNumber
        in: header
        description: Dealer Identifier
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 5
          minLength: 5
          pattern: "^[0-9]+$"
          type: string
        example: "04536"
      - name: brand
        in: header
        description: Brand
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Vehicle Brand
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
        example: toyota
      - name: creatorCode
        in: header
        description: Requesting Creator Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Creator Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: destinationCode
        in: header
        description: Destination Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Destination Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: pageNumber
        in: query
        description: The number of returned page
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000000
          minimum: 1
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: The number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 600
          minimum: 1
          type: integer
          default: 100
      responses:
        "200":
          description: OK
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransportationOptions'
        "400":
          description: "Bad Request, server cannot or will not process the request.\n\
            See more details in the Error message\n"
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: |
            The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: |
            The requested resource was not found.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:144656827983:function:service-schedule-booking/invocations
        httpMethod: POST
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /advisors:
    get:
      tags:
      - appointments
      summary: Retrieve dealerships service advisors
      description: Retrieve the advisors available at the dealership
      operationId: getAdvisors
      parameters:
      - name: country-code
        in: header
        description: Country Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Country Code
          example: "1"
      - name: locale
        in: header
        description: Locale
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Locale
          example: en-US
      - name: Prefer
        in: header
        description: "Json Payload that details the fields that the client wants included\
          \ in the repsonse. Can also include reporting information that goes into\
          \ the error logging through a context value paired specified as in the example.\
          \ logsLabel specifies key words to be logged in the application loggs, while\
          \ reportingLogs specifies keywords returned with an error message. Both\
          \ will default to context NNA_API and value Service Schedule Booking API\
          \ if they are not specified. Specific field names will default to false."
        required: false
        style: simple
        explode: false
        schema:
          type: string
          description: A json payload that details included response fields and reporting
            information
        example: "{'appointmentNumber': true, 'logsLabel': {context: NNA_API, value:\
          \ Service Schedule Booking API}, reportingLabel: {context: NNA_API, value:\
          \ Service Schedule Booking API}}"
      - name: star-minor-version
        in: header
        description: STAR Mionor Version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: API Minor Version
          example: 1.0.0
          enum:
          - 1.0.0
          - 1.0.1
          - 1.0.2
          - 1.0.3
        example: 1.0.0
      - name: requestId
        in: header
        description: Request ID/ Transaction ID Header Parameter (UUID version 4)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: 16a7d408-aed4-43f8-8af4-7a17f407f799
      - name: dealerNumber
        in: header
        description: Dealer Identifier
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 5
          minLength: 5
          pattern: "^[0-9]+$"
          type: string
        example: "04536"
      - name: brand
        in: header
        description: Brand
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Vehicle Brand
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
        example: toyota
      - name: creatorCode
        in: header
        description: Requesting Creator Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Creator Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: destinationCode
        in: header
        description: Destination Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Destination Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: pageNumber
        in: query
        description: The number of returned page
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000000
          minimum: 1
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: The number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 600
          minimum: 1
          type: integer
          default: 100
      responses:
        "200":
          description: OK
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisorsResponse'
        "400":
          description: "Bad Request, server cannot or will not process the request.\n\
            See more details in the Error message\n"
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: |
            The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: |
            The requested resource was not found.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:144656827983:function:service-schedule-booking/invocations
        httpMethod: POST
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /health-check:
    get:
      summary: Health check for endpoints
      description: Health check end point for Service Schedule Booking
      operationId: healthcheck
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Healthcheck'
        "400":
          description: "Bad Request, server cannot or will not process the request.\n\
            See more details in the Error message\n"
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: |
            The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: |
            The requested resource was not found.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "503":
          description: downstream service error
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:144656827983:function:service-schedule-booking/invocations
        httpMethod: POST
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /appointments/time-slots:
    get:
      tags:
      - appointments
      summary: Get Available Appointment Time Slots for the requested date range
      description: Get Available Appointment Time Slots for the requested date range
      operationId: getAvailableAppointmentTimeSlots
      parameters:
      - name: country-code
        in: header
        description: Country Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Country Code
          example: "1"
      - name: locale
        in: header
        description: Locale
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Locale
          example: en-US
      - name: Prefer
        in: header
        description: "Json Payload that details the fields that the client wants included\
          \ in the repsonse. Can also include reporting information that goes into\
          \ the error logging through a context value paired specified as in the example.\
          \ logsLabel specifies key words to be logged in the application loggs, while\
          \ reportingLogs specifies keywords returned with an error message. Both\
          \ will default to context NNA_API and value Service Schedule Booking API\
          \ if they are not specified. Specific field names will default to false."
        required: false
        style: simple
        explode: false
        schema:
          type: string
          description: A json payload that details included response fields and reporting
            information
        example: "{'appointmentNumber': true, 'logsLabel': {context: NNA_API, value:\
          \ Service Schedule Booking API}, reportingLabel: {context: NNA_API, value:\
          \ Service Schedule Booking API}}"
      - name: star-minor-version
        in: header
        description: STAR Mionor Version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: API Minor Version
          example: 1.0.0
          enum:
          - 1.0.0
          - 1.0.1
          - 1.0.2
          - 1.0.3
        example: 1.0.0
      - name: requestId
        in: header
        description: Request ID/ Transaction ID Header Parameter (UUID version 4)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: 16a7d408-aed4-43f8-8af4-7a17f407f799
      - name: dealerNumber
        in: header
        description: Dealer Identifier
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 5
          minLength: 5
          pattern: "^[0-9]+$"
          type: string
        example: "04536"
      - name: brand
        in: header
        description: Brand
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Vehicle Brand
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
        example: toyota
      - name: creatorCode
        in: header
        description: Requesting Creator Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Creator Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: destinationCode
        in: header
        description: Destination Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Destination Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: startDate
        in: query
        description: The start date from which the appointment slots are requested.
          If the start date is not provided the current date will be defaulted.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 10
          minLength: 0
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: string
          description: Start date
          format: date
        example: 2020-07-13T00:00:00.000+0000
      - name: endDate
        in: query
        description: The end date upto  which the appointment slots are requested.
          If the endDate is not provided the appointment slots from the current date
          up to 14 days will be provided in the service response.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 10
          minLength: 0
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: string
          description: End date
          format: date
        example: 2020-07-26T00:00:00.000+0000
      responses:
        "200":
          description: Get Available Service Appointments successfully
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentTimeSlots'
        "400":
          description: "Bad Request, server cannot or will not process the request.\n\
            See more details in the Error message\n"
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: |
            The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: |
            The requested resource was not found.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "429":
          description: |
            Too Many Requests error occurs when a user tries to perform too many requests within a certain timeframe.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: |
            The server encountered an unexpected condition which prevented it from fulfilling the request.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:144656827983:function:service-schedule-booking/invocations
        httpMethod: POST
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /appointments:
    get:
      tags:
      - appointments
      summary: Get Booked Appointments for the requested date range
      description: Get Booked Appointments for the requested date range
      operationId: getAppointments
      parameters:
      - name: country-code
        in: header
        description: Country Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Country Code
          example: "1"
      - name: locale
        in: header
        description: Locale
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Locale
          example: en-US
      - name: Prefer
        in: header
        description: "Json Payload that details the fields that the client wants included\
          \ in the repsonse. Can also include reporting information that goes into\
          \ the error logging through a context value paired specified as in the example.\
          \ logsLabel specifies key words to be logged in the application loggs, while\
          \ reportingLogs specifies keywords returned with an error message. Both\
          \ will default to context NNA_API and value Service Schedule Booking API\
          \ if they are not specified. Specific field names will default to false."
        required: false
        style: simple
        explode: false
        schema:
          type: string
          description: A json payload that details included response fields and reporting
            information
        example: "{'appointmentNumber': true, 'logsLabel': {context: NNA_API, value:\
          \ Service Schedule Booking API}, reportingLabel: {context: NNA_API, value:\
          \ Service Schedule Booking API}}"
      - name: star-minor-version
        in: header
        description: STAR Mionor Version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: API Minor Version
          example: 1.0.0
          enum:
          - 1.0.0
          - 1.0.1
          - 1.0.2
          - 1.0.3
        example: 1.0.0
      - name: requestId
        in: header
        description: Request ID/ Transaction ID Header Parameter (UUID version 4)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: 16a7d408-aed4-43f8-8af4-7a17f407f799
      - name: dealerNumber
        in: header
        description: Dealer Identifier
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 5
          minLength: 5
          pattern: "^[0-9]+$"
          type: string
        example: "04536"
      - name: brand
        in: header
        description: Brand
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Vehicle Brand
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
        example: toyota
      - name: creatorCode
        in: header
        description: Requesting Creator Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Creator Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: destinationCode
        in: header
        description: Destination Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Destination Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: vin
        in: query
        description: vehicle identification number
        required: true
        style: form
        explode: true
        schema:
          maxLength: 17
          minLength: 17
          type: string
          description: vin
        example: 1N4CZ0CPXJLEAF111
      - name: startDate
        in: query
        description: The start date from which the appointment slots are requested.
          If the start date is not provided the current date will be defaulted.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 10
          minLength: 0
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: string
          description: Start date
          format: date
        example: 2020-07-13T00:00:00.000+0000
      - name: endDate
        in: query
        description: The end date upto  which the appointment slots are requested.
          If the endDate is not provided the appointment slots from the current date
          up to 14 days will be provided in the service response.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 10
          minLength: 0
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: string
          description: End date
          format: date
        example: 2020-07-26T00:00:00.000+0000
      - name: pageNumber
        in: query
        description: The number of returned page
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000000
          minimum: 1
          type: integer
          default: 1
      - name: pageSize
        in: query
        description: The number of records to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 600
          minimum: 1
          type: integer
          default: 100
      responses:
        "200":
          description: Get Available Service Appointments successfully
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointments'
        "400":
          description: "Bad Request, server cannot or will not process the request.\n\
            See more details in the Error message\n"
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: |
            The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: |
            The requested resource was not found.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "429":
          description: |
            Too Many Requests error occurs when a user tries to perform too many requests within a certain timeframe.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: |
            The server encountered an unexpected condition which prevented it from fulfilling the request.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:144656827983:function:service-schedule-booking/invocations
        httpMethod: POST
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    post:
      tags:
      - appointments
      summary: Book an Appointment with a Dealer for the given Booking Date and Available
        Time Slot
      description: "This API is to book a Dealer Appointment for the given Booking\
        \ Date and Available Time Slot. To Book an Appointment, Customer/ Dealer/\
        \ Service Lane Representative needs to provide Basic Information abou the\
        \ Vehicle, Customer and Service Operaions representative needs to be provided\
        \ to successfully book an appointment."
      operationId: bookAppointment
      parameters:
      - name: country-code
        in: header
        description: Country Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Country Code
          example: "1"
      - name: locale
        in: header
        description: Locale
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Locale
          example: en-US
      - name: Prefer
        in: header
        description: "Json Payload that details the fields that the client wants included\
          \ in the repsonse. Can also include reporting information that goes into\
          \ the error logging through a context value paired specified as in the example.\
          \ logsLabel specifies key words to be logged in the application loggs, while\
          \ reportingLogs specifies keywords returned with an error message. Both\
          \ will default to context NNA_API and value Service Schedule Booking API\
          \ if they are not specified. Specific field names will default to false."
        required: false
        style: simple
        explode: false
        schema:
          type: string
          description: A json payload that details included response fields and reporting
            information
        example: "{'appointmentNumber': true, 'logsLabel': {context: NNA_API, value:\
          \ Service Schedule Booking API}, reportingLabel: {context: NNA_API, value:\
          \ Service Schedule Booking API}}"
      - name: star-minor-version
        in: header
        description: STAR Mionor Version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: API Minor Version
          example: 1.0.0
          enum:
          - 1.0.0
          - 1.0.1
          - 1.0.2
          - 1.0.3
        example: 1.0.0
      - name: requestId
        in: header
        description: Request ID/ Transaction ID Header Parameter (UUID version 4)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: 16a7d408-aed4-43f8-8af4-7a17f407f799
      - name: dealerNumber
        in: header
        description: Dealer Identifier
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 5
          minLength: 5
          pattern: "^[0-9]+$"
          type: string
        example: "04536"
      - name: brand
        in: header
        description: Brand
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Vehicle Brand
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
        example: toyota
      - name: creatorCode
        in: header
        description: Requesting Creator Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Creator Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: destinationCode
        in: header
        description: Destination Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Destination Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      requestBody:
        $ref: '#/components/requestBodies/AppointmentRequestBody'
      responses:
        "201":
          description: Created the Appointment successfully
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        "400":
          description: "Bad Request, server cannot or will not process the request.\n\
            See more details in the Error message\n"
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: |
            The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: |
            The requested resource was not found.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "429":
          description: |
            Too Many Requests error occurs when a user tries to perform too many requests within a certain timeframe.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: |
            The server encountered an unexpected condition which prevented it from fulfilling the request.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:144656827983:function:service-schedule-booking/invocations
        httpMethod: POST
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /appointments/{appointmentId}:
    get:
      tags:
      - appointments
      summary: Get Appointment details for the requested Appointment ID
      description: This API will provide Appointment details for the requested Appointment
        ID.
      operationId: getAppointmentDetails
      parameters:
      - name: country-code
        in: header
        description: Country Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Country Code
          example: "1"
      - name: locale
        in: header
        description: Locale
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Locale
          example: en-US
      - name: appointmentId
        in: path
        description: AppointmentID that was returend as part of Book Appointment API.
        required: true
        style: simple
        explode: true
        schema:
          maxLength: 9
          minLength: 9
          pattern: "^[0-9a-zA-Z]*$"
          type: string
          description: Appointment ID
          example: 29389AB26
        example: 29389AB26
      - name: Prefer
        in: header
        description: "Json Payload that details the fields that the client wants included\
          \ in the repsonse. Can also include reporting information that goes into\
          \ the error logging through a context value paired specified as in the example.\
          \ logsLabel specifies key words to be logged in the application loggs, while\
          \ reportingLogs specifies keywords returned with an error message. Both\
          \ will default to context NNA_API and value Service Schedule Booking API\
          \ if they are not specified. Specific field names will default to false."
        required: false
        style: simple
        explode: false
        schema:
          type: string
          description: A json payload that details included response fields and reporting
            information
        example: "{'appointmentNumber': true, 'logsLabel': {context: NNA_API, value:\
          \ Service Schedule Booking API}, reportingLabel: {context: NNA_API, value:\
          \ Service Schedule Booking API}}"
      - name: star-minor-version
        in: header
        description: STAR Mionor Version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: API Minor Version
          example: 1.0.0
          enum:
          - 1.0.0
          - 1.0.1
          - 1.0.2
          - 1.0.3
        example: 1.0.0
      - name: requestId
        in: header
        description: Request ID/ Transaction ID Header Parameter (UUID version 4)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: 16a7d408-aed4-43f8-8af4-7a17f407f799
      - name: dealerNumber
        in: header
        description: Dealer Identifier
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 5
          minLength: 5
          pattern: "^[0-9]+$"
          type: string
        example: "04536"
      - name: brand
        in: header
        description: Brand
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Vehicle Brand
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
        example: toyota
      - name: creatorCode
        in: header
        description: Requesting Creator Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Creator Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: destinationCode
        in: header
        description: Destination Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Destination Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      responses:
        "200":
          description: Get Appointment details successfully
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        "400":
          description: "Bad Request, server cannot or will not process the request.\n\
            See more details in the Error message\n"
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: |
            The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: |
            The requested resource was not found.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "429":
          description: |
            Too Many Requests error occurs when a user tries to perform too many requests within a certain timeframe.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: |
            The server encountered an unexpected condition which prevented it from fulfilling the request.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:144656827983:function:service-schedule-booking/invocations
        httpMethod: POST
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    put:
      tags:
      - appointments
      summary: "Modify/ Update the Appointment with the same Dealer,for the requested\
        \ Appointment ID"
      description: "This API is to Modify/ Update the Dealer Appointment with the\
        \ same Dealer for the given Appointment ID. To Modify/ Update an Appointment,\
        \ Cusomter/ Dealer/ Service Lane Representative needs to provide Basic Information\
        \ about the Vehicle, Customer and Service Operaions representative needs to\
        \ be provided to successfully book an appointment."
      operationId: updateAppointment
      parameters:
      - name: country-code
        in: header
        description: Country Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Country Code
          example: "1"
      - name: locale
        in: header
        description: Locale
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Locale
          example: en-US
      - name: appointmentId
        in: path
        description: AppointmentID that was returend as part of Book Appointment API.
        required: true
        style: simple
        explode: true
        schema:
          maxLength: 9
          minLength: 9
          pattern: "^[0-9a-zA-Z]*$"
          type: string
          description: Appointment ID
          example: 29389AB26
        example: 29389AB26
      - name: Prefer
        in: header
        description: "Json Payload that details the fields that the client wants included\
          \ in the repsonse. Can also include reporting information that goes into\
          \ the error logging through a context value paired specified as in the example.\
          \ logsLabel specifies key words to be logged in the application loggs, while\
          \ reportingLogs specifies keywords returned with an error message. Both\
          \ will default to context NNA_API and value Service Schedule Booking API\
          \ if they are not specified. Specific field names will default to false."
        required: false
        style: simple
        explode: false
        schema:
          type: string
          description: A json payload that details included response fields and reporting
            information
        example: "{'appointmentNumber': true, 'logsLabel': {context: NNA_API, value:\
          \ Service Schedule Booking API}, reportingLabel: {context: NNA_API, value:\
          \ Service Schedule Booking API}}"
      - name: star-minor-version
        in: header
        description: STAR Mionor Version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: API Minor Version
          example: 1.0.0
          enum:
          - 1.0.0
          - 1.0.1
          - 1.0.2
          - 1.0.3
        example: 1.0.0
      - name: requestId
        in: header
        description: Request ID/ Transaction ID Header Parameter (UUID version 4)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: 16a7d408-aed4-43f8-8af4-7a17f407f799
      - name: dealerNumber
        in: header
        description: Dealer Identifier
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 5
          minLength: 5
          pattern: "^[0-9]+$"
          type: string
        example: "04536"
      - name: brand
        in: header
        description: Brand
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Vehicle Brand
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
        example: toyota
      - name: creatorCode
        in: header
        description: Requesting Creator Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Creator Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: destinationCode
        in: header
        description: Destination Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Destination Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      requestBody:
        description: Update the Appointment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
        required: true
      responses:
        "200":
          description: Updated the Appointment successfully.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        "400":
          description: "Bad Request, server cannot or will not process the request.\n\
            See more details in the Error message\n"
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: |
            The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: |
            The requested resource was not found.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "429":
          description: |
            Too Many Requests error occurs when a user tries to perform too many requests within a certain timeframe.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: |
            The server encountered an unexpected condition which prevented it from fulfilling the request.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:144656827983:function:service-schedule-booking/invocations
        httpMethod: POST
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    delete:
      tags:
      - appointments
      summary: Cancels the Appointment for the requested Appointment ID
      description: This API Cancels the Appointment for the requested Appointment
        ID and responds with the deleted Appointment details for the given Appointment
        ID.
      operationId: cancelAppointment
      parameters:
      - name: country-code
        in: header
        description: Country Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Country Code
          example: "1"
      - name: locale
        in: header
        description: Locale
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Locale
          example: en-US
      - name: appointmentId
        in: path
        description: AppointmentID that was returend as part of Book Appointment API.
        required: true
        style: simple
        explode: true
        schema:
          maxLength: 9
          minLength: 9
          pattern: "^[0-9a-zA-Z]*$"
          type: string
          description: Appointment ID
          example: 29389AB26
        example: 29389AB26
      - name: Prefer
        in: header
        description: "Json Payload that details the fields that the client wants included\
          \ in the repsonse. Can also include reporting information that goes into\
          \ the error logging through a context value paired specified as in the example.\
          \ logsLabel specifies key words to be logged in the application loggs, while\
          \ reportingLogs specifies keywords returned with an error message. Both\
          \ will default to context NNA_API and value Service Schedule Booking API\
          \ if they are not specified. Specific field names will default to false."
        required: false
        style: simple
        explode: false
        schema:
          type: string
          description: A json payload that details included response fields and reporting
            information
        example: "{'appointmentNumber': true, 'logsLabel': {context: NNA_API, value:\
          \ Service Schedule Booking API}, reportingLabel: {context: NNA_API, value:\
          \ Service Schedule Booking API}}"
      - name: star-minor-version
        in: header
        description: STAR Mionor Version
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: API Minor Version
          example: 1.0.0
          enum:
          - 1.0.0
          - 1.0.1
          - 1.0.2
          - 1.0.3
        example: 1.0.0
      - name: requestId
        in: header
        description: Request ID/ Transaction ID Header Parameter (UUID version 4)
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
        example: 16a7d408-aed4-43f8-8af4-7a17f407f799
      - name: dealerNumber
        in: header
        description: Dealer Identifier
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 5
          minLength: 5
          pattern: "^[0-9]+$"
          type: string
        example: "04536"
      - name: brand
        in: header
        description: Brand
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Vehicle Brand
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
        example: toyota
      - name: creatorCode
        in: header
        description: Requesting Creator Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Creator Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      - name: destinationCode
        in: header
        description: Destination Code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: Destination Code
          example: toyota
          enum:
          - toyota
          - lexus
          - nissan
          - gm
          - CDK
          - R&R
          - DealerFX
          - UpdatePromise
        example: toyota
      responses:
        "200":
          description: Cancel the Appointment successfully.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        "400":
          description: "Bad Request, server cannot or will not process the request.\n\
            See more details in the Error message\n"
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: |
            The request requires user authentication. The response MUST include a WWW-Authenticate header field containing a challenge applicable to the requested resource.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "404":
          description: |
            The requested resource was not found.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "429":
          description: |
            Too Many Requests error occurs when a user tries to perform too many requests within a certain timeframe.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: |
            The server encountered an unexpected condition which prevented it from fulfilling the request.
          headers:
            requestId:
              $ref: '#/components/headers/requestId'
            correlationId:
              $ref: '#/components/headers/correlationId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        type: aws_proxy
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:144656827983:function:service-schedule-booking/invocations
        httpMethod: POST
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
components:
  schemas:
    Healthcheck:
      type: object
      properties:
        status:
          type: boolean
          description: status of the service
          example: true
        profile:
          type: string
          description: configuration profile of the service typically speicifying
            environment
          example: production
    AppointmentTimeSlots:
      type: object
      properties:
        dealerDetails:
          $ref: '#/components/schemas/DealerDetails'
        availableTimeslots:
          $ref: '#/components/schemas/TimeSlots'
        pagination:
          $ref: '#/components/schemas/Pagination'
    Appointments:
      type: object
      properties:
        appointments:
          type: array
          items:
            $ref: '#/components/schemas/Appointment'
        pagination:
          $ref: '#/components/schemas/Pagination'
    Security:
      type: object
      properties:
        signatureValue:
          type: string
          description: SignatureValue
          example: SignatureValue
        digestValue:
          type: string
          description: Digest Value
          example: Digest Value
    Name:
      required:
      - firstName
      - lastName
      type: object
      properties:
        firstName:
          type: array
          description: Customer First Name.
          example:
          - John
          - Michael
          items:
            type: string
        lastName:
          type: string
          description: Customer Last Name.
          example: Doe
        prefix:
          type: array
          description: Customer Name Prefixes
          example:
          - Mr.
          items:
            type: string
        suffix:
          type: array
          description: Customer Name Suffixes
          example:
          - PhD
          items:
            type: string
    ContactMethod:
      required:
      - type
      - use
      - value
      type: object
      properties:
        type:
          type: string
          description: Type of contact method
          enum:
          - phone
          - email
          - mail
          - pager
          - url
          - sms
          - other
        value:
          type: string
          description: Actual contact method details
        use:
          type: string
          description: Purpose of contact method
          enum:
          - home
          - work
          - mobile
          - other
        rank:
          type: integer
          description: Preferred order of use (1 = highest)
          example: 1
        preferredContactTime:
          type: string
          description: Customer preferred contact time
          example: Mon-Fri between 2 PM and 8 PM
        consent:
          type: boolean
          description: Customer gave consent for being contacted using this method
    Communication:
      required:
      - language
      type: object
      properties:
        language:
          type: string
          description: Language that may be used to communicate with the customer
          example: English
        preferred:
          type: boolean
          description: Language preferrence indicator
    Identifier:
      required:
      - value
      type: object
      properties:
        value:
          type: string
          description: Unique identifier value within the system
          example: "12345"
        system:
          type: string
          description: Identifier namespace
          example: CDK
    Customer:
      required:
      - contactMethod
      - name
      type: object
      properties:
        identifier:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        name:
          $ref: '#/components/schemas/Name'
        address:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        contactMethod:
          type: array
          items:
            $ref: '#/components/schemas/ContactMethod'
        emailDeclined:
          type: boolean
          description: flag indicating if the customer has declined to provide email.
          example: false
        communication:
          type: array
          items:
            $ref: '#/components/schemas/Communication'
      description: Customer Personal details
    Address:
      required:
      - city
      - country
      - line
      - postalCode
      - state
      type: object
      properties:
        use:
          type: string
          description: Purpose of this address
          example: home
          enum:
          - home
          - work
          - billing
          - shipping
          - other
        type:
          type: string
          description: Type of address
          example: physical
          enum:
          - postal
          - physical
          - both
        line:
          type: array
          description: "Street name, number, direction & P.O. Box etc"
          example:
          - "5505 N. Cumberland Ave., Suite 307"
          - Box 5855
          items:
            type: string
        city:
          type: string
          description: "Name of city, town"
          example: Plano
        state:
          type: string
          description: Sub-unit of country
          example: Texas
        country:
          type: string
          description: Country (ISO 3166 2 or 3 letter code)
          example: USA
        postalCode:
          maxLength: 10
          minLength: 0
          type: string
          description: "Postal code for area (75234, 75234-2165)"
          example: "75234"
      description: Customer Address
    Preferences:
      type: object
      properties:
        isRideRequired:
          type: string
          description: Ride required Yes/ No.
          example: "Yes"
          enum:
          - "Yes"
          - "No"
        isLoanerRequired:
          type: string
          description: Lonar Vehicle required Yes/ No.
          example: "Yes"
          enum:
          - "Yes"
          - "No"
        isPickUpRequired:
          type: string
          description: PickUp required Yes/ No.
          example: "No"
          enum:
          - "Yes"
          - "No"
        isDropOffRequired:
          type: string
          description: DropOff required Yes/ No.
          example: "No"
          enum:
          - "Yes"
          - "No"
        reminders:
          type: string
          description: Reminders/ updates/ communications text/email.
          example: text
          enum:
          - text
          - email
    BasicVehicle:
      type: object
      properties:
        year:
          maxLength: 4
          minLength: 4
          pattern: "(19|20)\\d{2}"
          type: string
          description: Model year of car
          example: "2019"
        make:
          type: string
          description: Car make/brand name
          example: Toyota
        modelName:
          type: string
          description: Car model name
          example: Prius
        stockImage:
          type: string
          description: Car Stock Image
          example: https://urldefense.com/v3/__https://www.toyota.com/assets/img/vehicles/prius/2020/default-offer-detail.png__;!!Bbg-OcCDlOs!TJoI0TclFSiOj7hqDuJi9phO-nXm1zlInjvh7WX3UHMzXuUPG5XQ3QS9aQMA8CGsmfmkWw$
    Vehicle:
      required:
      - vin
      type: object
      properties:
        identifier:
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        vin:
          maxLength: 17
          minLength: 17
          pattern: "^[0-9A-HJ-NPR-Z]+$"
          type: string
          description: Vehicle Identification Number
          example: 4T1B11HK6KU804537
        odometer:
          $ref: '#/components/schemas/Odometer'
      allOf:
      - $ref: '#/components/schemas/BasicVehicle'
    Odometer:
      required:
      - value
      type: object
      properties:
        value:
          type: integer
          description: Car odometer value
          example: 22000
        unit:
          type: string
          description: Car odometer value unit
          example: mi
          enum:
          - mi
          - km
    TimeSlots:
      type: object
      properties:
        days:
          type: array
          items:
            $ref: '#/components/schemas/DayOfWeek'
    Appointment:
      type: object
      example:
        dealerNumber: "04536"
        appointmentNumber: 286AL3H4
        appointmentDate: 2020-07-20T00:00:00.000+0000
        appointmentTime: 08:30
        additionalComments: Check the Tyre Pressure and Breaks.
        preferences:
          isRideRequired: "Yes"
          isLoanerRequired: "Yes"
          isPickUpRequired: "No"
          isDropOffRequired: "No"
          reminders: text
        pickUpAddress:
          use: home
          type: physical
          line:
          - "5505 N. Cumberland Ave., Suite 307"
          - Box 5855
          city: Plano
          state: Texas
          country: USA
          postalCode: "75234"
        dropOffAddress:
          use: home
          type: physical
          line:
          - "5505 N. Cumberland Ave., Suite 307"
          - Box 5855
          city: Plano
          state: Texas
          country: USA
          postalCode: "75234"
        customer:
          identifier:
          - value: "12345"
            system: CDK
          name:
            firstName:
            - John
            - Michael
            lastName: Doe
            prefix:
            - Mr.
            suffix:
            - PhD
          address:
          - use: home
            type: physical
            line:
            - "5505 N. Cumberland Ave., Suite 307"
            - Box 5855
            city: Plano
            state: Texas
            country: USA
            postalCode: "75234"
          contactMethod:
          - type: phone
            value: string
            use: home
            rank: 1
            preferredContactTime: Mon-Fri between 2 PM and 8 PM
            consent: true
          emailDeclined: false
          communication:
          - language: English
            preferred: true
        security:
          signatureValue: SignatureValue
          digestValue: Digest Value
        transport:
          type: string
          description: string
        type: service
        requestId: 16a7d408-aed4-43f8-8af4-7a17f407f799
        vehicle:
          year: "2019"
          make: Toyota
          modelName: Prius
          stockImage: https://urldefense.com/v3/__https://www.toyota.com/assets/img/vehicles/prius/2020/default-offer-detail.png__;!!Bbg-OcCDlOs!TJoI0TclFSiOj7hqDuJi9phO-nXm1zlInjvh7WX3UHMzXuUPG5XQ3QS9aQMA8CGsmfmkWw$
          identifier:
          - value: "12345"
            system: CDK
          vin: 4T1B11HK6KU804537
          odometer:
            value: 22000
            unit: mi
        serviceOperations:
        - opCodeNumber: 01TOZMAT
          opCodeDescription: 5k Miles Service.
          customerComments: Some comments about this specific service operation
          serviceOperationsDescription: 5k Miles Service.
          category: tbd
          maintenance: true
          validation: true
          price: "80.00"
          discounts:
          - code: 01TOZMAT
            description: 5k Miles Service Promotion
            price: "80.00"
        advisor:
          advisorId: SA265FG8
          name: John Doo
          jobTitle: Service Adviser
          email: john.doo@mail.com
          imageUrl: https://urldefense.com/v3/__https://www.dms-hostdomain.com/advisors/advisorName.jpg__;!!Bbg-OcCDlOs!TJoI0TclFSiOj7hqDuJi9phO-nXm1zlInjvh7WX3UHMzXuUPG5XQ3QS9aQMA8CEw6GNk_g$
      oneOf:
      - $ref: '#/components/schemas/ServiceAppointment'
      - $ref: '#/components/schemas/TestDriveAppointment'
      - $ref: '#/components/schemas/DeliveryAppointment'
      - $ref: '#/components/schemas/TradeAppointment'
    BasicAppointment:
      required:
      - appointmentDate
      - appointmentTime
      - customer
      - dealerNumber
      type: object
      properties:
        dealerNumber:
          maxLength: 5
          minLength: 5
          pattern: "^[0-9]+$"
          type: string
          description: Dealer Number
          example: "04536"
        appointmentNumber:
          pattern: "[a-zA-Z0-9]"
          type: string
          description: Appointment Number
          example: 286AL3H4
        appointmentDate:
          maxLength: 10
          minLength: 0
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: string
          description: Appointment Date
          format: date
        appointmentTime:
          maxLength: 10
          minLength: 0
          type: string
          description: Appointment Time
          example: 08:30
        additionalComments:
          type: string
          description: Additional Comments
          example: Check the Tyre Pressure and Breaks.
        preferences:
          $ref: '#/components/schemas/Preferences'
        pickUpAddress:
          $ref: '#/components/schemas/Address'
        dropOffAddress:
          $ref: '#/components/schemas/Address'
        customer:
          $ref: '#/components/schemas/Customer'
        security:
          $ref: '#/components/schemas/Security'
        transport:
          $ref: '#/components/schemas/Transport'
    ServiceAppointment:
      allOf:
      - $ref: '#/components/schemas/BasicAppointment'
      - required:
        - requestId
        - serviceOperations
        - vehicle
        type: object
        properties:
          type:
            type: string
            enum:
            - service
          requestId:
            type: string
            description: Request ID
            format: uuid
            example: 16a7d408-aed4-43f8-8af4-7a17f407f799
          vehicle:
            $ref: '#/components/schemas/Vehicle'
          serviceOperations:
            type: array
            description: Service Operation details that Customer added to service
              the Vehicle.
            items:
              $ref: '#/components/schemas/Operation'
          advisor:
            $ref: '#/components/schemas/Advisor'
    TestDriveAppointment:
      allOf:
      - $ref: '#/components/schemas/BasicAppointment'
      - required:
        - requestId
        - vehicle
        type: object
        properties:
          type:
            type: string
            enum:
            - testdrive
          requestId:
            type: string
            description: Request ID
            format: uuid
            example: 16a7d408-aed4-43f8-8af4-7a17f407f799
          vehicle:
            $ref: '#/components/schemas/BasicVehicle'
    DeliveryAppointment:
      allOf:
      - $ref: '#/components/schemas/BasicAppointment'
      - required:
        - requestId
        - vehicle
        type: object
        properties:
          type:
            type: string
            enum:
            - delivery
          requestId:
            type: string
            description: Request ID
            format: uuid
            example: 16a7d408-aed4-43f8-8af4-7a17f407f799
          vehicle:
            $ref: '#/components/schemas/Vehicle'
    TradeAppointment:
      allOf:
      - $ref: '#/components/schemas/BasicAppointment'
      - required:
        - requestId
        - vehicle
        type: object
        properties:
          type:
            type: string
            enum:
            - trade
          requestId:
            type: string
            description: Request ID
            format: uuid
            example: 16a7d408-aed4-43f8-8af4-7a17f407f799
          vehicle:
            $ref: '#/components/schemas/Vehicle'
    DealerDetails:
      type: object
      properties:
        name:
          type: string
          description: Dealer Name
          example: Toyota of Dallas
        website:
          type: string
          description: Dealer WebSite url.
          format: uri
          example: https://urldefense.com/v3/__https://www.toyotaofdallas.com__;!!Bbg-OcCDlOs!TJoI0TclFSiOj7hqDuJi9phO-nXm1zlInjvh7WX3UHMzXuUPG5XQ3QS9aQMA8CHWQ_GJVw$
        address:
          type: string
          description: Dealer Address Full
          example: 2610 Forest Lane Dallas TX 74234 USA
        street:
          type: string
          description: Dealer Address Street
          example: 2610 Forest Lane
        city:
          type: string
          description: Dealer Address City
          example: Dallas
        state:
          type: string
          description: Dealer Address State
          example: TX
        country:
          type: string
          description: Dealer Address Country
          example: USA
        zip:
          type: string
          description: Dealer Address Zip
          example: "75234"
        contactDetails:
          type: string
          description: Dealer Contact Details
          example: Phone# 9722416655; Phone800# 972-241-6655; ToyotaFax# (972) 243-3706
        addressTitle:
          type: string
          description: Dealer Address Title
          example: Main Dealer
      description: Dealer Details
    DayOfWeek:
      type: object
      properties:
        isOpen:
          type: boolean
          description: "is DealerShip Open on this day of the week (true for open,\
            \ false for close)"
          example: true
        isToday:
          type: boolean
          description: "is this Calendar date is today (true if this day is todays\
            \ date, false if this day is not todays date)"
          example: false
        calendarDate:
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: string
          description: Day of the Week.
          format: date
        dayOfWeek:
          type: string
          description: Day Of Week
          example: Monday
          enum:
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Sunday
        hoursOfOperation:
          $ref: '#/components/schemas/HoursOfOperation'
        timeslots:
          type: array
          items:
            $ref: '#/components/schemas/AvailableTimeslots'
    HoursOfOperation:
      type: object
      properties:
        availabilityStartTime:
          type: string
          description: Dealer Service Hours Start Time
          example: "420"
        availabilityEndTime:
          type: string
          description: Dealer Service Hours End Time
          example: "1140"
        unitCode:
          type: string
          description: Unit of measure
          example: MINUTE
    AvailableTimeslots:
      type: object
      properties:
        time:
          type: string
          description: Timeslot
          example: 08:15
        advisors:
          $ref: '#/components/schemas/Advisors'
        transportationOptions:
          type: array
          items:
            $ref: '#/components/schemas/Transport'
        isOpen:
          type: boolean
          description: "is this Timeslot is available (true if it is available, false\
            \ if the Timeslot is not available)"
          example: true
    Pagination:
      type: object
      properties:
        pageNumber:
          minimum: 1
          type: integer
          description: The number of returned page
          default: 1
        pageSize:
          maximum: 900
          minimum: 1
          type: integer
          description: The size of page
          default: 100
        totalPages:
          type: integer
          description: Total pages
        recordsCount:
          type: integer
          description: Total number of records
    ErrorModel:
      required:
      - message
      type: object
      properties:
        errorId:
          type: integer
          description: Unique identifier for the error message for monitoring purposes
            and organized by error type and profile
        errorMsg:
          type: string
          description: Error message directly from integrated service (if applicable).
            Returned as is.
        userErrorMsg:
          type: string
          description: Customized user friendly message for Display
    FieldMessage:
      required:
      - field
      - message
      type: object
      properties:
        field:
          type: string
          description: Specific Field where error were found.
        message:
          type: string
          description: Error Message specific to a field.
    Transport:
      type: object
      properties:
        type:
          type: string
          description: Transport type
        description:
          type: string
          description: Transport type description
    Operation:
      type: object
      properties:
        opCodeNumber:
          type: string
          description: OpCode Number
          example: 01TOZMAT
        opCodeDescription:
          type: string
          description: Op Code Description
          example: 5k Miles Service.
        customerComments:
          type: string
          description: Customer comments
          example: Some comments about this specific service operation
        serviceOperationsDescription:
          type: string
          description: Service Operations Description
          example: 5k Miles Service.
        category:
          type: string
          description: Service Operations Category
          example: tbd
        maintenance:
          type: boolean
          description: Service operation to support vehicle maintenance
          example: true
        validation:
          type: boolean
          description: Service operation to support vehicle validation
          example: true
        price:
          type: string
          description: Service Operation price.
          example: "80.00"
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/Discount'
      description: Service Opearions
    ServiceOperationsByMileage:
      type: object
      properties:
        vehicleMaintenanceInterval:
          $ref: '#/components/schemas/ServiceOperationsByMileage_vehicleMaintenanceInterval'
        servicesAtClosestIntervals:
          type: array
          description: 3 closest service intervals around the provided mileage or
            the first 3 service intervals
          items:
            $ref: '#/components/schemas/ServiceOperationsByMileage_servicesAtClosestIntervals'
        pagination:
          $ref: '#/components/schemas/Pagination'
    ServiceOperationsDefault:
      type: object
      properties:
        serviceOperations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        pagination:
          $ref: '#/components/schemas/Pagination'
    Discount:
      type: object
      properties:
        code:
          type: string
          description: Discount Code
          example: 01TOZMAT
        description:
          type: string
          description: Special Promotion
          example: 5k Miles Service Promotion
        price:
          type: string
          description: Discount Price.
          example: "80.00"
    Advisor:
      type: object
      properties:
        advisorId:
          type: string
          description: Service Adviser Id
          example: SA265FG8
        name:
          type: string
          description: Service Adviser
          example: John Doo
        jobTitle:
          type: string
          description: Service Advisor
          example: Service Adviser
        email:
          type: string
          description: Service Advisor eamil
          example: john.doo@mail.com
        imageUrl:
          type: string
          description: Service Advisor profile photo image url
          example: https://urldefense.com/v3/__https://www.dms-hostdomain.com/advisors/advisorName.jpg__;!!Bbg-OcCDlOs!TJoI0TclFSiOj7hqDuJi9phO-nXm1zlInjvh7WX3UHMzXuUPG5XQ3QS9aQMA8CEw6GNk_g$
      description: Service Agents Details
    Advisors:
      type: array
      items:
        $ref: '#/components/schemas/Advisor'
    AdvisorsResponse:
      type: object
      properties:
        advisors:
          $ref: '#/components/schemas/Advisors'
        pagination:
          $ref: '#/components/schemas/Pagination'
    TransportationOptions:
      type: object
      properties:
        transportationOptions:
          type: array
          items:
            $ref: '#/components/schemas/Transport'
        pagination:
          $ref: '#/components/schemas/Pagination'
    ServiceOperationsByMileage_vehicleMaintenanceInterval:
      type: object
      properties:
        intervalMileage:
          type: integer
          example: 5000
        intervalKilometers:
          type: integer
          example: 7500
        intervalMonth:
          type: integer
          example: 6
    ServiceOperationsByMileage_servicesAtClosestIntervals:
      type: object
      properties:
        intervalMileage:
          type: number
          example: 20000
        serviceOperations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
  responses:
    AppointmentTimeSlotsResponse:
      description: Get Available Service Appointments successfully
      headers:
        requestId:
          $ref: '#/components/headers/requestId'
        correlationId:
          $ref: '#/components/headers/correlationId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AppointmentTimeSlots'
    AppointmentsResponse:
      description: Get Available Service Appointments successfully
      headers:
        requestId:
          $ref: '#/components/headers/requestId'
        correlationId:
          $ref: '#/components/headers/correlationId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Appointments'
    CreateAppointmentResponse:
      description: Created the Appointment successfully
      headers:
        requestId:
          $ref: '#/components/headers/requestId'
        correlationId:
          $ref: '#/components/headers/correlationId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Appointment'
    GetAppointmentResponse:
      description: Get Appointment details successfully
      headers:
        requestId:
          $ref: '#/components/headers/requestId'
        correlationId:
          $ref: '#/components/headers/correlationId'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Appointment'
  parameters:
    CountryCode:
      name: country-code
      in: header
      description: Country Code
      required: true
      style: simple
      explode: false
      schema:
        type: string
        description: Country Code
        example: "1"
    Locale:
      name: locale
      in: header
      description: Locale
      required: true
      style: simple
      explode: false
      schema:
        type: string
        description: Locale
        example: en-US
    Prefer:
      name: Prefer
      in: header
      description: "Json Payload that details the fields that the client wants included\
        \ in the repsonse. Can also include reporting information that goes into the\
        \ error logging through a context value paired specified as in the example.\
        \ logsLabel specifies key words to be logged in the application loggs, while\
        \ reportingLogs specifies keywords returned with an error message. Both will\
        \ default to context NNA_API and value Service Schedule Booking API if they\
        \ are not specified. Specific field names will default to false."
      required: false
      style: simple
      explode: false
      schema:
        type: string
        description: A json payload that details included response fields and reporting
          information
      example: "{'appointmentNumber': true, 'logsLabel': {context: NNA_API, value:\
        \ Service Schedule Booking API}, reportingLabel: {context: NNA_API, value:\
        \ Service Schedule Booking API}}"
    StarVersion:
      name: star-minor-version
      in: header
      description: STAR Mionor Version
      required: true
      style: simple
      explode: false
      schema:
        type: string
        description: API Minor Version
        example: 1.0.0
        enum:
        - 1.0.0
        - 1.0.1
        - 1.0.2
        - 1.0.3
      example: 1.0.0
    RequestId:
      name: requestId
      in: header
      description: Request ID/ Transaction ID Header Parameter (UUID version 4)
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
      example: 16a7d408-aed4-43f8-8af4-7a17f407f799
    DealerNumber:
      name: dealerNumber
      in: header
      description: Dealer Identifier
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 5
        minLength: 5
        pattern: "^[0-9]+$"
        type: string
      example: "04536"
    Brand:
      name: brand
      in: header
      description: Brand
      required: true
      style: simple
      explode: false
      schema:
        type: string
        description: Vehicle Brand
        example: toyota
        enum:
        - toyota
        - lexus
        - nissan
        - gm
      example: toyota
    CreatorCode:
      name: creatorCode
      in: header
      description: Requesting Creator Code
      required: true
      style: simple
      explode: false
      schema:
        type: string
        description: Creator Code
        example: toyota
        enum:
        - toyota
        - lexus
        - nissan
        - gm
        - CDK
        - R&R
        - DealerFX
        - UpdatePromise
      example: toyota
    DestinationCode:
      name: destinationCode
      in: header
      description: Destination Code
      required: true
      style: simple
      explode: false
      schema:
        type: string
        description: Destination Code
        example: toyota
        enum:
        - toyota
        - lexus
        - nissan
        - gm
        - CDK
        - R&R
        - DealerFX
        - UpdatePromise
      example: toyota
    Vin:
      name: vin
      in: query
      description: vehicle identification number
      required: true
      style: form
      explode: true
      schema:
        maxLength: 17
        minLength: 17
        type: string
        description: vin
      example: 1N4CZ0CPXJLEAF111
    PageNumber:
      name: pageNumber
      in: query
      description: The number of returned page
      required: false
      style: form
      explode: true
      schema:
        maximum: 1000000
        minimum: 1
        type: integer
        default: 1
    PageSize:
      name: pageSize
      in: query
      description: The number of records to return
      required: false
      style: form
      explode: true
      schema:
        maximum: 600
        minimum: 1
        type: integer
        default: 100
    AppointmentId:
      name: appointmentId
      in: path
      description: AppointmentID that was returend as part of Book Appointment API.
      required: true
      style: simple
      explode: true
      schema:
        maxLength: 9
        minLength: 9
        pattern: "^[0-9a-zA-Z]*$"
        type: string
        description: Appointment ID
        example: 29389AB26
      example: 29389AB26
    AdvisorId:
      name: advisorId
      in: query
      description: advisorId by which the client wants to filter
      required: true
      style: form
      explode: true
      schema:
        maxLength: 20
        minLength: 0
        pattern: "^[0-9a-zA-Z]*$"
        type: string
        description: Advisor ID
        example: "123456"
      example: 29389AB26
    TransportType:
      name: transportType
      in: query
      description: transport type by which the client wants to filter
      required: true
      style: form
      explode: true
      schema:
        maxLength: 20
        minLength: 0
        pattern: "^[0-9a-zA-Z]*$"
        type: string
        description: Appointment ID
        example: own-ride
      example: own-ride
  requestBodies:
    AppointmentRequestBody:
      description: Book Appointment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Appointment'
      required: true
  headers:
    requestId:
      description: Transaction ID Header (UUID version 4)
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
      example: 16a7d408-aed4-43f8-8af4-7a17f407f799
    correlationId:
      description: Correlation ID Header (UUID version 4)
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uuid
      example: 16a7d408-aed4-43f8-8af4-7a17f407f799
    dealerType:
      description: Type of dealer
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: ABC
  securitySchemes:
    APIKeyAuthorizer:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        type: request
        authorizerUri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:144656827983:function:acctmgmt-stg-LambdaAuthorizer/invocations
        authorizerResultTtlInSeconds: 300
        identitySource: method.request.header.Authorization
